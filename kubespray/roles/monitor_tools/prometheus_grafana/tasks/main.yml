#
# Prometheus and Grafana Installation
#
---
- name: create multiple directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - '{{ charts_dir }}'
    - '{{ monitor_dir }}/config'
#    - /data/prometheus/alertmanager
#    - /data/prometheus/pushgateway
#    - /data/prometheus/server
#    - /data/grafana
#- name: Change file ownership, group and permissions for Prometheus server
#  file:
#    path: /data/prometheus/server
#    owner: 65534
#    group: 65534
#    mode: 0777

#
# Create PV files for alertmanager, pushgateway, server
#
- name: create PV files - alertmanager-pv.yaml
  copy:
    dest: "{{ monitor_dir }}/config/alertmanager-pv.yaml"
    content: |
      kind: PersistentVolume
      apiVersion: v1
      metadata:
        name: alertmanager-pv
        labels:
          type: local
      spec:
        storageClassName: alertmanager
        capacity:
          storage: 2Gi
        accessModes:
          - ReadWriteMany
        hostPath:
           path: /data/prometheus/alertmanager
- name: create PV files - pushgateway-pv.yaml
  copy:
    dest: "{{ monitor_dir }}/config/pushgateway-pv.yaml"
    content: |
      kind: PersistentVolume
      apiVersion: v1
      metadata:
        name: pushgateway-pv
        labels:
          type: local
      spec:
        storageClassName: pushgateway
        capacity:
          storage: 2Gi
        accessModes:
          - ReadWriteMany
        hostPath:
           path: /data/prometheus/pushgateway
- name: create PV files - server-pv.yaml
  copy:
    dest: "{{ monitor_dir }}/config/server-pv.yaml"
    content: |
      kind: PersistentVolume
      apiVersion: v1
      metadata:
        name: server-pv
        labels:
          type: local
      spec:
        storageClassName: server
        capacity:
          storage: 8Gi
        accessModes:
          - ReadWriteMany
        hostPath:
           path: /data/prometheus/server
- name: create PV files - grafana-pv.yaml
  copy:
    dest: "{{ monitor_dir }}/config/grafana-pv.yaml"
    content: |
      kind: PersistentVolume
      apiVersion: v1
      metadata:
        name: grafana-pv
        labels:
          type: local
      spec:
        storageClassName: grafana
        capacity:
          storage: 10Gi
        accessModes:
          - ReadWriteMany
        hostPath:
           path: /data/grafana
#
# Create PVC files for alertmanager, pushgateway, server
#
- name: create PVC files - alertmanager-pvc.yaml
  copy:
    dest: "{{ monitor_dir }}/config/alertmanager-pvc.yaml"
    content: |
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: alertmanager-pvc
      spec:
        storageClassName: alertmanager
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 2Gi
- name: create PVC files - pushgateway-pvc.yaml
  copy:
    dest: "{{ monitor_dir }}/config/pushgateway-pvc.yaml"
    content: |
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: pushgateway-pvc
      spec:
        storageClassName: pushgateway
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 2Gi
- name: create PVC files - server-pvc.yaml
  copy:
    dest: "{{ monitor_dir }}/config/server-pvc.yaml"
    content: |
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: server-pvc
      spec:
        storageClassName: server
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 8Gi
- name: create PVC files - grafana-pvc.yaml
  copy:
    dest: "{{ monitor_dir }}/config/grafana-pvc.yaml"
    content: |
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: grafana-pvc
      spec:
        storageClassName: grafana
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 10Gi
#
# Command to create PV and PVC volume
#
- name: Command to create the PV and PVC volume
  shell: |
    kubectl apply -f alertmanager-pv.yaml
    kubectl apply -f pushgateway-pv.yaml
    kubectl apply -f server-pv.yaml
    sleep 5
    kubectl apply -f grafana-pv.yaml

    kubectl apply -f alertmanager-pvc.yaml
    kubectl apply -f pushgateway-pvc.yaml
    kubectl apply -f server-pvc.yaml
    kubectl apply -f grafana-pvc.yaml
  args:
    chdir: "{{ monitor_dir }}/config/"

#
# Helm install Prometheus + Grafana
#
- name: Install helm charts from a git repo
  git:
    repo: 'https://github.com/helm/charts.git'
    dest: "{{ charts_dir }}"

- name: Helm install prometheus
  shell: |
    sleep 30
    helm install stable/prometheus --values stable/prometheus/values.yaml --name x --set alertmanager.persistentVolume.enabled=true,alertmanager.persistentVolume.accessModes=ReadWriteMany,alertmanager.persistentVolume.existingClaim=alertmanager-pvc,alertmanager.persistentVolume.mountPath=/data/prometheus/alertmanager,alertmanager.persistentVolume.storageClass=alertmanager --set pushgateway.persistentVolume.enabled=true,pushgateway.persistentVolume.accessModes=ReadWriteMany,pushgateway.persistentVolume.existingClaim=pushgateway-pvc,pushgateway.persistentVolume.mountPath=/data/prometheus/pushgateway,pushgateway.persistentVolume.storageClass=pushgateway --set server.persistentVolume.enabled=true,server.persistentVolume.accessModes=ReadWriteMany,server.persistentVolume.existingClaim=server-pvc,server.persistentVolume.mountPath=/data/prometheus/server,server.persistentVolume.storageClass=server,server.service.type=NodePort,server.service.nodePort=30250,server.securityContext.enabled=false
  args:
    chdir: "{{ charts_dir }}"
- name: Helm install grafana
  shell: |
    sleep 30
    helm install --name x-grafana stable/grafana --set adminPassword="{{ grafana_password | quote }}",admin.userKey="",admin.passwordKey="",admin.passwordKey="",service.type=NodePort,service.nodePort=30300
  args:
    chdir: "{{ charts_dir }}"

